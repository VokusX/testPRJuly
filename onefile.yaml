apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: get-toolchain-json
spec:
  inputs:
    params:
      - name: apikey
        description: the ibmcloud api key
      - name: region
        description: the ibmcloud registry region
      - name: toolchainID
        description: toolchain ID you want JSON from
    resources:
    - name: workspace
      type: git
  outputs:
    resources:
    - name: workspace
      type: git
  steps:
  - name: get-json
    image: ubuntu
    env:
      - name: IBMCLOUD_API_KEY
        value: $(inputs.params.apikey)
      - name: API
        value: $(inputs.params.api)
      - name: REGION
        value: $(inputs.params.region)
      - name: TOOLCHAIN_ID
        value: $(inputs.params.toolchainID)
    command: ["/bin/bash"]
    args: ['-c', 'echo $TOOLCHAIN_ID']
---
# Task writes "some stuff" to a predefined path in the workspace git PipelineResource
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: create-file
spec:
  inputs:
    resources:
    - name: workspace
      type: git
      targetPath: damnworkspace
  outputs:
    resources:
    - name: workspace
      type: git
  steps:
  - name: read-docs-old
    image: ubuntu
    command: ["/bin/bash"]
    args: ['-c', 'ls -la /workspace/damnworkspace/docs/README.md'] # tests that targetpath works
  - name: write-new-stuff
    image: ubuntu
    command: ['bash']
    args: ['-c', 'ln -s /workspace/damnworkspace /workspace/output/workspace && echo some stuff > /workspace/output/workspace/stuff']
---
# Reads a file from a predefined path in the workspace git PipelineResource
apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: check-stuff-file-exists
spec:
  inputs:
    resources:
    - name: workspace
      type: git
      targetPath: newworkspace
  steps:
  - name: read
    image: ubuntu
    command: ["/bin/bash"]
    args: ['-c', 'cat /workspace/newworkspace/stuff'] # tests that new targetpath and previous task output is dumped
---
#The Output of the first Task (git resource) create-file is given as an `Input`
# to the next `Task` check-stuff-file-exists using`from` clause.

apiVersion: tekton.dev/v1alpha1
kind: Pipeline
metadata:
  name: output-pipeline
spec:
  params:
    - name: apikey
      description: the ibmcloud api key
    - name: region
      description: the ibmcloud registry region
      default: us-south
    - name: toolchainID
      description: tooldchain ID from which you get JSON
  resources:
  - name: source-repo
    type: git
  tasks:
  - name: toolchain-json
    taskRef:
      name: get-toolchain-json
    params:
        - name: apikey
          value: $(params.apikey)
        - name: region
          value: $(params.region)
        - name: toolchainID
          value: $(params.toolchainID)
    resources:
      inputs:
      - name: workspace
        resource: source-repo
      outputs:
      - name: workspace
        resource: source-repo
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerTemplate
metadata:
  name: pipeline-template
spec:
  params:
    - name: gitrevision
      description: The git revision
      default: master
    - name: gitrepositoryurl
      description: The git repository url
    - name: message
      description: The message to print
      default: This is the default message
  resourcetemplates:
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineResource
      metadata:
        name: git-source-$(uid)
        labels:
          triggertemplated: "true"
          generatedBy: "triggers-example"
      spec:
        type: git
        params:
        - name: revision
          value: $(params.gitrevision)
        - name: url
          value: $(params.gitrepositoryurl)
    - apiVersion: tekton.dev/v1alpha1
      kind: PipelineRun
      metadata:
        generateName: output-pipeline-run
        labels:
          triggertemplated: "true"
          generatedBy: "triggers-example"
      spec:
        pipelineRef:
            name: output-pipeline
        serviceAccount: 'default'
        params:
        - name: message
          value: $(params.message)
        resources:
        - name: source-repo
          resourceRef:
            name: git-source-$(uid)
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: pipeline-binding
spec:
  params:
    - name: gitrevision
      value: $(event.head_commit.id)
    - name: gitrepositoryurl
      value: $(event.repository.url)
---
apiVersion: tekton.dev/v1alpha1
kind: TriggerBinding
metadata:
  name: manual-pipeline-binding
spec:
  params:
    - name: gitrevision
      value: v0.32.0
    - name: gitrepositoryurl
      value: https://github.com/GoogleContainerTools/skaffold
---
apiVersion: tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: listener
spec:
  triggers:
    - binding:
        name: pipeline-binding
      template:
        name: pipeline-template
      params:
        - name: message
          value: Hello from the Git Triggers EventListener!
---
apiVersion: tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: manual-listener
spec:
  triggers:
    - binding:
        name: manual-pipeline-binding
      template:
        name: pipeline-template
      params:
        - name: message
          value: Hello from the Manual Triggers EventListener!
